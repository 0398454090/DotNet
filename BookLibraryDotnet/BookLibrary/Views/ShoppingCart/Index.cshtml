@model List<BookLibrary.ModelViews.CartItem>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
    @if (Model != null && Model.Count() > 0)
    {
        <div class="cart">
            <h2 class="cart-title">Giỏ hàng</h2>
            <div class="cart-table">
                <table>
                    <thead>
                        <tr>
                            <th>Tên sản phẩm &amp; Chi tiết</th>
                            <th>Giá tiền</th>
                            <th>Số lượng</th>
                            <th>Tổng cộng</th>
                            <th>Xóa</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Count() > 0)
                        {
                            foreach (var item in Model)
                            {
                                <tr data-product-id="@item.product.ProductId">
                                    <td>
                                        <div class="product-info">
                                            <img src="@item.product.Thumb" alt="@item.product.Ttile" class="product-thumb">
                                            <div class="product-details">
                                                <span class="product-name">@item.product.ProductName</span>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="product-price">@item.product.Price.Value.ToString("#,##0") VNĐ</td>
                                    <td>
                                        <input type="number" value="@item.amount" class="quantity-input" min="1" data-product-id="@item.product.ProductId">
                                    </td>
                                    <td class="total-money">@item.TotalMoney.ToString("#,##0") VNĐ</td>
                                    <td>
                                        <button class="delete-btn" onclick="confirmDelete(@item.product.ProductId)">X</button>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
            <div class="cart-summary">
                <div class="promo-code">
                    <label for="promo">Mã khuyến mãi:</label>
                    <input type="text" id="promo" placeholder="Nhập mã giảm giá">
                </div>
                <div class="summary-details">
                    <p>Giảm giá: <span></span></p>
                    <p>Tổng giá: <span id="total-price">@Model.Sum(x => x.TotalMoney).ToString("#,##0") VNĐ</span></p>
                </div>
            </div>
            <div class="cart-actions">
                <a href="https://localhost:44315/BookList.html" class="action-btn">Tiếp tục mua sắm</a>
                <a href="@Url.Action("Index", "Checkout")" class="checkout-btn" role="button" aria-label="Proceed to checkout">Thanh toán</a>
            </div>

        </div>
    }
    else
    {
        <p>Không có sản phẩm trong giỏ hàng</p>
    }
</div>
<style>

.cart {
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin: 20px auto;
    max-width: 1200px;
}

.cart-title {
    font-size: 28px;
    color: #333;
    text-align: center;
    margin-bottom: 20px;
    font-weight: bold;
}

/* Table Styling */
.cart-table table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
}

.cart-table th,
.cart-table td {
    text-align: left;
    padding: 12px;
    border: 1px solid #ddd;
}

.cart-table th {
    background-color: #f7f7f7;
    font-weight: bold;
    color: #555;
}

.product-info {
    display: flex;
    align-items: center;
    gap: 10px;
}

.product-thumb {
    width: 70px;
    height: 70px;
    border-radius: 6px;
    object-fit: cover;
    border: 1px solid #ddd;
}

.product-name {
    font-size: 16px;
    font-weight: bold;
    color: #333;
}

.product-color {
    font-size: 14px;
    color: #666;
    margin-top: 4px;
}

/* Input Styling */
.quantity-input {
    width: 80px;
    text-align: center;
    padding: 5px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

/* Button Styling */
    .delete-btn {
        background-color: #e74c3c;
        color: white;
        border: none;
        padding: 6px 12px;
        cursor: pointer;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .delete-btn:hover {
            background-color: #c0392b;
        }


/* Summary Section */
.cart-summary {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 20px;
    margin-bottom: 20px;
}

.promo-code input {
    width: 100%;
    max-width: 300px;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

.summary-details p {
    margin: 5px 0;
    font-size: 16px;
}

.summary-details span {
    font-weight: bold;
    color: #333;
}

/* Actions Section */
    .cart-actions {
        display: flex;
        justify-content: flex-end; /* Căn về bên phải */
        gap: 10px; /* Khoảng cách giữa các nút */
    }


.action-btn,
.checkout-btn {
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    padding: 10px 20px;
    border-radius: 5px;
    margin: 5px;
    border: none;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.action-btn:hover,
.checkout-btn:hover {
    background-color: #0056b3;
}

</style>
<script>

    $(document).on("change", ".quantity-input", function () {
        const productId = $(this).data("product-id");
        const newQuantity = $(this).val();

        $.ajax({
            url: '/api/cart/update', // Route API cập nhật
            type: 'POST',
            data: {
                productId: productId,
                amount: newQuantity
            },
            success: function (response) {
                if (response.success) {
                    location.reload(); // Reload lại giỏ hàng
                } else {
                    alert("Có lỗi khi cập nhật số lượng.");
                }
            },
            error: function () {
                alert("Không thể gửi yêu cầu.");
            }
        });
    });


     // Xác nhận xóa sản phẩm
     function confirmDelete(productId) {
         if (confirm("Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?")) {
             removeFromCart(productId);
         }
     }

    

    function removeFromCart(productId) {
        $.ajax({
            url: '/api/cart/remove',
            type: 'POST',
            data: { productID: productId },
            success: function (response) {
                if (response.success) {
                    alert("Sản phẩm đã được xóa khỏi giỏ hàng.");
                    location.reload();
                } else {
                    alert("Không thể xóa sản phẩm.");
                }
            },
            error: function () {
                alert("Lỗi khi gửi yêu cầu.");
            }
        });
    }

</script>